{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","valid","errors","changeHandler","e","target","name","value","setState","submitHandler","preventDefault","persist","entries","Object","onAdd","props","forEach","entry","this","method","onSubmit","htmlFor","Alert","variant","id","type","onChange","Button","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa33ffec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport { Button, Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    valid: false,\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState(state => ({\n      newMovie: {\n        ...state.newMovie,\n        [name]: value,\n      },\n    }));\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    const { valid, newMovie } = this.state;\n    const entries = Object.entries(newMovie);\n    const { onAdd } = this.props;\n\n    entries.forEach((entry) => {\n      if (!entry[1]) {\n        this.setState(state => ({\n          valid: false,\n          errors: {\n            ...state.errors,\n            [entry[0]]: true,\n          },\n        }));\n      } else {\n        this.setState(state => ({\n          valid: true,\n          errors: {\n            ...state.errors,\n            [entry[0]]: false,\n          },\n        }));\n      }\n    });\n\n    if (valid) {\n      onAdd(newMovie);\n      this.setState({\n        newMovie: {\n          title: '',\n          description: '',\n          imgUrl: '',\n          imdbUrl: '',\n          imdbId: '',\n        },\n      });\n    }\n  }\n\n  render() {\n    const {\n      newMovie: {\n        title,\n        imgUrl,\n        description,\n        imdbUrl,\n        imdbId,\n      },\n      errors,\n    } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        method=\"POST\"\n        onSubmit={this.submitHandler}\n      >\n        <label\n          className=\"NewMovie__label\"\n          htmlFor=\"movie-title\"\n        >\n          Movie Title\n        </label>\n        {errors.title && (\n          <Alert variant=\"danger\">\n            Please, fill in movie title\n          </Alert>\n        )}\n        <input\n          className={errors.title\n            ? 'NewMovie__input--invalid'\n            : 'NewMovie__input'}\n          name=\"title\"\n          id=\"movie-title\"\n          value={title}\n          type=\"text\"\n          onChange={this.changeHandler}\n        />\n\n        <label className=\"NewMovie__label\" htmlFor=\"movie-description\">\n          Movie Description\n        </label>\n        <textarea\n          className=\"NewMovie__input\"\n          name=\"description\"\n          id=\"movie-description\"\n          value={description}\n          onChange={this.changeHandler}\n        />\n\n        <label className=\"NewMovie__label\" htmlFor=\"movie-poster\">\n          Link to the Movie Poster\n        </label>\n        {errors.imgUrl && (\n          <Alert variant=\"danger\">\n            Please, provide link to the movie poster\n          </Alert>\n        )}\n        <input\n          className={errors.imgUrl\n            ? 'NewMovie__input--invalid'\n            : 'NewMovie__input'}\n          name=\"imgUrl\"\n          id=\"movie-poster\"\n          value={imgUrl}\n          onChange={this.changeHandler}\n          type=\"text\"\n        />\n\n        <label className=\"NewMovie__label\" htmlFor=\"movie-imdb\">\n          Link to the IMDb Profile\n        </label>\n        {errors.imdbUrl && (\n          <Alert variant=\"danger\">\n            Please, provide link to the IMDb profile\n          </Alert>\n        )}\n        <input\n          className={errors.imdbUrl\n            ? 'NewMovie__input--invalid'\n            : 'NewMovie__input'}\n          id=\"movie-imdb\"\n          name=\"imdbUrl\"\n          type=\"text\"\n          value={imdbUrl}\n          onChange={this.changeHandler}\n        />\n\n        <label\n          className=\"NewMovie__label\"\n          htmlFor=\"movie-imdb-id\"\n        >\n          IMDb id\n        </label>\n        {errors.imdbId && (\n          <Alert variant=\"danger\">\n            Please, fill in the IMDb id\n          </Alert>\n        )}\n        <input\n          className={errors.imdbId\n            ? 'NewMovie__input--invalid'\n            : 'NewMovie__input'}\n          id=\"movie-imdb-id\"\n          name=\"imdbId\"\n          type=\"text\"\n          value={imdbId}\n          onChange={this.changeHandler}\n        />\n\n        <Button\n          type=\"submit\"\n          className=\"NewMovie__button\"\n        >\n          Add New Movie\n        </Button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [newMovie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}